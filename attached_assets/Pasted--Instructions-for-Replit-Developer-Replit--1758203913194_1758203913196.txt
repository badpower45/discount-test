(Instructions for Replit Developer) - تعليمات لمطور Replit
اسم المشروع: منصة الخصومات والتوصيل - المرحلة النهائية (تكامل دورة عمل التاجر)

إلى: فريق تطوير Replit الجديد

من: مالك المشروع

الموضوع: خطة عمل مركزة لإكمال المهمة النهائية في المشروع

1. نظرة عامة على المشروع وحالته الحالية

أهلاً بك في الفريق. أنت تنضم إلى مشروع في مراحله الأخيرة، حيث تم إنجاز ما يقارب 90% من العمل بجودة عالية.

الحالة الحالية:

النظام بالكامل مبني على React/Vite للواجهة الأمامية وSupabase للواجهة الخلفية.

لدينا واجهات مستخدم متكاملة للعملاء (لإنشاء وتتبع الطلبات) ولوحات تحكم فعالة لكل من الأدمن (لإدارة المطاعم) وسائق التوصيل (لاستقبال الطلبات).

الموقع له هيكل احترافي (هيدر، فوتر، تصميم عام).

الهدف من وجودك:
مهمتك هي تنفيذ الحلقة الأخيرة المتبقية في دورة عمل المشروع، وهي تمكين التاجر (المطعم) من التفاعل مع الطلبات الجديدة التي ينشئها العملاء.

2. الهدف النهائي: رحلة المستخدم الكاملة التي نريد تحقيقها

يجب أن تتمكن المنصة من تحقيق السيناريو التالي بسلاسة:

العميل يقوم بإنشاء طلب توصيل جديد. (تم التنفيذ)

التاجر يرى الطلب الجديد في لوحة التحكم الخاصة به، يقبله، ثم يضغط على زر "جاهز للتوصيل". (هذه هي المهمة المطلوبة منك)

السائق يرى الطلب الجاهز في لوحة التحكم الخاصة به ويقوم بتوصيله. (تم التنفيذ)

3. خطة العمل التفصيلية: المهمة الوحيدة المتبقية

مهمتك تتركز بالكامل على لوحة تحكم التاجر.

المهمة: تفعيل قسم إدارة الطلبات في لوحة تحكم التاجر
الملف المستهدف الرئيسي: src/components/MerchantDashboard.tsx

الخطوة 1: بناء واجهة عرض الطلبات

الإجراء: قم بإضافة قسم جديد (Tab) في الشريط الجانبي للوحة تحكم التاجر باسم "الطلبات" (Orders).

التفاصيل:

عند فتح هذا القسم، يجب أن يقوم بجلب وعرض جميع الطلبات الخاصة بهذا المطعم من جدول orders في Supabase.

يجب عرض الطلبات الجديدة (التي حالتها pending_restaurant_acceptance) في الأعلى.

كل طلب جديد يجب أن يعرض بوضوح تفاصيل العميل والطلب، مع وجود زرين: "قبول" (Accept) و**"رفض" (Reject)**.

الخطوة 2: تفعيل منطق التفاعل مع الطلبات

الإجراء: قم برمجة الأزرار التي قمت بإنشائها في الخطوة السابقة.

التفاصيل:

عندما يضغط التاجر على زر "قبول":

يجب تحديث حالة الطلب (status) في قاعدة بيانات Supabase إلى preparing.

في الواجهة، يجب أن تختفي أزرار القبول والرفض، ويظهر بدلاً منها زر واحد جديد: "الطلب جاهز للتوصيل".

عندما يضغط التاجر على زر "الطلب جاهز للتوصيل":

يجب تحديث حالة الطلب (status) في قاعدة البيانات إلى ready_for_pickup.

ملاحظة هامة: بمجرد تنفيذ الخطوة الأخيرة (تغيير الحالة إلى ready_for_pickup)، فإن نظام التحديث الفوري الموجود بالفعل في المشروع سيتكفل بالباقي، حيث سيظهر الطلب تلقائيًا في لوحة تحكم سائق التوصيل.

4. الخطوة النهائية: الاختبار الشامل

بعد إكمال المهمة، يرجى إجراء اختبار كامل لرحلة المستخدم الموضحة في النقطة رقم 2 للتأكد من أن جميع الأجزاء تعمل معًا بسلاسة.

شكرًا لانضمامك، ونتطلع لرؤية المشروع مكتملاً.