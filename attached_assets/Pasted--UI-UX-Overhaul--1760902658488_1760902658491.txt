البرومبت النهائي لإعادة تصميم واجهة المشروع (UI/UX Overhaul):
الموضوع: خطة عمل شاملة لإعادة تصميم هوية المشروع وتجربة المستخدم (UI/UX Overhaul)

إلى: فريق تطوير Replit

1. الهدف الأساسي: المشروع مكتمل وظيفيًا. الهدف الآن هو إجراء تغيير جذري وشامل (180 درجة) في المظهر والتصميم. نريد هوية بصرية جديدة تمامًا، أكثر احترافية وحداثة، وتجربة مستخدم أفضل. لا نريد تعديلات بسيطة، بل إعادة تصميم كاملة للواجهات.

2. استراتيجية العمل: سنعتمد على نظام التصميم shadcn/ui المستخدم في المشروع، والذي يسمح بإعادة التصميم الكامل عبر تعديل متغيرات CSS الأساسية والـ "Tokens" في مكان واحد، مما يضمن تطبيق التغييرات على جميع مكونات التطبيق مرة واحدة.

3. خطة العمل التفصيلية:

المرحلة الأولى: البحث عن هوية بصرية جديدة (Visual Identity)

الإجراء: قبل كتابة أي كود، يرجى تصفح مواقع الإلهام مثل Dribbble و Behance والبحث عن dashboards وتطبيقات توصيل حديثة.

المطلوب: تحديد اتجاه فني جديد. على سبيل المثال:

"Modern & Clean": تصميم بسيط، خلفيات بيضاء أو رمادية فاتحة، خطوط رفيعة، واستخدام لون أساسي واحد قوي.

"Dark Mode & Neon": تصميم داكن مع ألوان زاهية ومشرقة (Neon) للعناصر المهمة.

"Neo-Brutalism": استخدام ظلال قوية وحادة، خلفيات بلون واحد، وأزرار بارزة بزوايا حادة.

المرحلة الثانية: بناء وتطبيق থিম (Theme) جديد

هذه هي الخطوة التقنية الأهم.

1. إنشاء لوحة ألوان جديدة:

الإجراء: استخدم أداة مثل "Shadcn UI Theme Generator" (يمكن البحث عنها أونلاين) أو "Tailwind Color Palette Generator".

المطلوب: قم بتوليد مجموعة ألوان كاملة (Primary, Secondary, Accent, Background, Foreground, Card, Destructive, etc.).

2. تطبيق الـ Theme الجديد على المشروع:

الملف المستهدف: src/index.css (أو src/styles/globals.css).

الإجراء: انسخ متغيرات CSS (CSS Variables) التي تم إنشاؤها من الأداة، وقم بلصقها في هذا الملف لتحل محل متغيرات الألوان القديمة بالكامل.

3. تعديل الشكل العام (Rounding & Borders):

الإجراء: في نفس ملف CSS، قم بتعديل متغير --radius (المسؤول عن استدارة الزوايا). جرب قيمًا مختلفة مثل 0rem (لزوايا حادة)، 0.5rem (الافتراضي)، أو 1rem (لزوايا شديدة الاستدارة) لترى كيف يتغير شكل المشروع بالكامل.

المرحلة الثالثة: صقل وتخصيص المكونات الرئيسية (Component Refinement)

بعد تطبيق الـ Theme، سنقوم بمراجعة وتعديل المكونات الرئيسية لتتناسب مع الهوية الجديدة.

1. لوحات التحكم (Dashboards):

الملفات المستهدفة: AdminDashboard.tsx, MerchantDashboard.tsx, DispatcherDashboard.tsx, DeliveryDriverDashboard.tsx.

الإجراء: أعد تصميم تخطيط (Layout) هذه الصفحات. بدلاً من عرض كل شيء كقائمة بسيطة، استخدم مكونات Card لتقسيم المعلومات. استعمل Charts لعرض الإحصائيات بشكل مرئي وجذاب.

2. الأزرار والنماذج (Buttons & Forms):

الإجراء: تأكد من أن الأزرار الرئيسية (Primary Buttons) تستخدم اللون الأساسي الجديد بشكل بارز. راجع تصميم نماذج الإدخال (Forms) في صفحات مثل OrderPage.tsx و LoginPage.tsx لجعلها أكثر سهولة في الاستخدام.

3. الطباعة والخطوط (Typography):

الإجراء: اختر خطًا جديدًا من Google Fonts يتناسب مع الهوية البصرية الجديدة. قم باستيراده في index.html وتطبيقه كخط أساسي في tailwind.config.js أو index.css.

بتنفيذ هذه الخطة، سيتحول المشروع من تطبيق وظيفي إلى منتج احترافي ومميز بصريًا وجاهز للمستخدمين. شكرًا لكم.